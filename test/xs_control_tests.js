// Generated by CoffeeScript 1.4.0

/*
    xs_control_tests.coffee

    Copyright (C) 2013, Connected Sets

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var Control, Ordered_Set, Set, Table, XS, chai, checkbox, checkbox_source, options, organizer;

  XS = typeof require !== "undefined" && require !== null ? (require('../src/xs.js')).XS : this.XS;

  if (typeof require !== "undefined" && require !== null) {
    require('../src/code.js');
    require('../src/fork.js');
    require('../src/filter.js');
    require('../src/ordered_set.js');
    require('../src/aggregator.js');
    require('../src/table.js');
    require('../src/control.js');
  }

  if (typeof require !== "undefined" && require !== null) {
    chai = require('chai');
  }

  if (chai != null) {
    chai.should();
  }

  Set = XS.Set;

  Table = XS.Table;

  Ordered_Set = XS.Ordered_Set;

  Control = XS.Control;

  organizer = [
    {
      id: "id"
    }
  ];

  options = {};

  checkbox_source = new Ordered_Set([], organizer, {
    name: "Checkbox Source"
  });

  checkbox = checkbox_source.checkbox(document.getElementById("checkbox_control"), organizer, options);

  describe('Checkbox():', function() {
    it('checkbox should be empty', function() {
      return checkbox.get().should.be.empty;
    });
    return describe('add():', function() {
      it('after checkbox_source.add( object ), checkbox should be equal to [ { id: true, label: "Chart", column: "sales" } ]', function() {
        checkbox_source.add([
          {
            id: true,
            label: "Chart",
            column: "sales"
          }
        ]);
        return checkbox.get().should.be.eql([
          {
            id: true,
            label: "Chart",
            column: "sales"
          }
        ]);
      });
      it('checkbox.value should be equal to { id: true, label: "Chart", column: "sales" }', function() {
        return checkbox.value.should.be.eql({
          id: true,
          label: "Chart",
          column: "sales"
        });
      });
      it('after checkbox_source.add( object ), checkbox should be equal to [ { id: false, label: "Chart" }, { id: true, label: "Chart", column: "sales" } ]', function() {
        checkbox_source.add([
          {
            id: false,
            label: "Chart"
          }
        ]);
        return checkbox.get().should.be.eql([
          {
            id: false,
            label: "Chart"
          }, {
            id: true,
            label: "Chart",
            column: "sales"
          }
        ]);
      });
      return it('checkbox.value should be equal to { id: true, label: "Chart", column: "sales" }', function() {
        return checkbox.value.should.be.eql({
          id: true,
          label: "Chart",
          column: "sales"
        });
      });
    });
  });

}).call(this);
