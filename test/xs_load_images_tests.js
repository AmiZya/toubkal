// Generated by CoffeeScript 1.6.3
/*
    xs_load_images_tests.coffee

    Copyright (C) 2013, Connected Sets

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var XS, check, expect, xs;

  if (typeof mocha !== 'undefined') {
    mocha.setup('bdd');
  }

  check = function(done, test) {
    var e;
    try {
      test();
      return setTimeout(done, 0);
    } catch (_error) {
      e = _error;
      return done(e);
    }
  };

  XS = typeof require !== "undefined" && require !== null ? (require('../lib/xs.js')).XS : this.XS;

  expect = typeof require !== "undefined" && require !== null ? require('expect.js') : this.expect;

  if (typeof require !== "undefined" && require !== null) {
    require('../lib/load_images.js');
  }

  xs = XS.xs;

  describe('Load Images test suite:', function() {
    var images, images_dataset, node;
    images_dataset = xs.set([], {
      name: 'Images dataset'
    }).auto_increment();
    images = images_dataset.load_images({
      loading_max: 2,
      display: 'visible'
    });
    node = document.getElementById('xs_load_images');
    it('should have created xs_preoloaded_images div', function() {
      expect(node).to.be.ok();
      return expect(node.nodeName).to.be('DIV');
    });
    it('expect images.fetch_all() to be empty', function() {
      return expect(images.fetch_all()).to.be.empty();
    });
    it('after images_dataset.add( objects ), expect images.fetch_all() to be equal to result', function(done) {
      this.timeout(0);
      images_dataset.add([
        {
          title: 'Villa Marrakech 1',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/011.jpg'
        }, {
          title: 'Villa Marrakech 2',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/02.jpg'
        }, {
          title: 'Villa Marrakech 3',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/03.jpg'
        }, {
          title: 'Villa Marrakech 4',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/04.jpg'
        }, {
          title: 'Villa Marrakech 5',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/05.jpg'
        }, {
          title: 'Villa Marrakech 6',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/06.jpg'
        }, {
          title: 'Villa Marrakech 7',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/07.jpg'
        }
      ]);
      expect(images._loading_count).to.be(2);
      return images.on('complete', function() {
        return images.fetch_all(function(values) {
          return check(done, function() {
            values.sort(function(a, b) {
              return a.id > b.id;
            });
            return expect(values).to.be.eql([
              {
                id: 2,
                title: 'Villa Marrakech 2',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/02.jpg'
              }, {
                id: 3,
                title: 'Villa Marrakech 3',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/03.jpg'
              }, {
                id: 4,
                title: 'Villa Marrakech 4',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/04.jpg'
              }, {
                id: 5,
                title: 'Villa Marrakech 5',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/05.jpg'
              }, {
                id: 6,
                title: 'Villa Marrakech 6',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/06.jpg'
              }, {
                id: 7,
                title: 'Villa Marrakech 7',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/07.jpg'
              }
            ]);
          });
        });
      }, this, true);
    });
    it('should no longer have any image loading', function() {
      return expect(images._loading_count).to.be(0);
    });
    it('should have added 6 images to the DOM', function() {
      expect(node.childNodes[0].nodeName).to.be('IMG');
      expect(node.childNodes[1].nodeName).to.be('IMG');
      expect(node.childNodes[2].nodeName).to.be('IMG');
      expect(node.childNodes[3].nodeName).to.be('IMG');
      expect(node.childNodes[4].nodeName).to.be('IMG');
      expect(node.childNodes[5].nodeName).to.be('IMG');
      return expect(node.childNodes[6]).to.not.be.ok();
    });
    it('should set the attribute loaded to 1 for these 6 images', function(done) {
      return images.fetch_all(function(values) {
        return check(done, function() {
          var image, value, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = values.length; _i < _len; _i++) {
            value = values[_i];
            image = images._get_image_from_uri(value.uri);
            expect(image.nodeName).to.be('IMG');
            expect(image.src).to.be(value.uri);
            _results.push(expect(image.getAttribute('loaded')).to.be('1'));
          }
          return _results;
        });
      });
    });
    it('after images_dataset.add( objects ), expect images.fetch_all() to be equal to result', function(done) {
      this.timeout(0);
      images._loading_max = 1;
      images_dataset.add([
        {
          title: 'Villa Marrakech 8',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/08.jpg'
        }, {
          title: 'Villa Marrakech 9',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/09.jpg'
        }
      ]);
      expect(images._loading_count).to.be(1);
      return images.on('complete', function() {
        return images.fetch_all(function(values) {
          return check(done, function() {
            values.sort(function(a, b) {
              return a.id > b.id;
            });
            return expect(values).to.be.eql([
              {
                id: 2,
                title: 'Villa Marrakech 2',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/02.jpg'
              }, {
                id: 3,
                title: 'Villa Marrakech 3',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/03.jpg'
              }, {
                id: 4,
                title: 'Villa Marrakech 4',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/04.jpg'
              }, {
                id: 5,
                title: 'Villa Marrakech 5',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/05.jpg'
              }, {
                id: 6,
                title: 'Villa Marrakech 6',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/06.jpg'
              }, {
                id: 7,
                title: 'Villa Marrakech 7',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/07.jpg'
              }, {
                id: 8,
                title: 'Villa Marrakech 8',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/08.jpg'
              }, {
                id: 9,
                title: 'Villa Marrakech 9',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/09.jpg'
              }
            ]);
          });
        });
      }, this, true);
    });
    it('should have added 2 images to the DOM', function() {
      expect(node.childNodes[0].nodeName).to.be('IMG');
      expect(node.childNodes[1].nodeName).to.be('IMG');
      expect(node.childNodes[2].nodeName).to.be('IMG');
      expect(node.childNodes[3].nodeName).to.be('IMG');
      expect(node.childNodes[4].nodeName).to.be('IMG');
      expect(node.childNodes[5].nodeName).to.be('IMG');
      expect(node.childNodes[6].nodeName).to.be('IMG');
      expect(node.childNodes[7].nodeName).to.be('IMG');
      return expect(node.childNodes[8]).to.not.be.ok();
    });
    it('should set the attribute loaded_count to 1 for these 6 images', function(done) {
      return images.fetch_all(function(values) {
        return check(done, function() {
          var image, value, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = values.length; _i < _len; _i++) {
            value = values[_i];
            image = images._get_image_from_uri(value.uri);
            expect(image.nodeName).to.be('IMG');
            expect(image.src).to.be(value.uri);
            _results.push(expect(image.getAttribute('loaded')).to.be('1'));
          }
          return _results;
        });
      });
    });
    it('after images_dataset.remove( objects ), expect images.fetch_all() to be equal to result', function() {
      var values;
      images_dataset.remove([
        {
          id: 6,
          title: 'Villa Marrakech 6',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/06.jpg'
        }, {
          id: 8,
          title: 'Villa Marrakech 8',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/08.jpg'
        }
      ]);
      values = images.fetch_all().sort(function(a, b) {
        return a.id > b.id;
      });
      return expect(values).to.be.eql([
        {
          id: 2,
          title: 'Villa Marrakech 2',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/02.jpg'
        }, {
          id: 3,
          title: 'Villa Marrakech 3',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/03.jpg'
        }, {
          id: 4,
          title: 'Villa Marrakech 4',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/04.jpg'
        }, {
          id: 5,
          title: 'Villa Marrakech 5',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/05.jpg'
        }, {
          id: 7,
          title: 'Villa Marrakech 7',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/07.jpg'
        }, {
          id: 9,
          title: 'Villa Marrakech 9',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/09.jpg'
        }
      ]);
    });
    it('should have removed 2 images from the DOM', function() {
      expect(node.childNodes[0].nodeName).to.be('IMG');
      expect(node.childNodes[1].nodeName).to.be('IMG');
      expect(node.childNodes[2].nodeName).to.be('IMG');
      expect(node.childNodes[3].nodeName).to.be('IMG');
      expect(node.childNodes[4].nodeName).to.be('IMG');
      expect(node.childNodes[5].nodeName).to.be('IMG');
      return expect(node.childNodes[6]).to.not.be.ok();
    });
    it('after images_dataset.update( objects ), expect images.fetch_all() to be equal to result', function(done) {
      this.timeout(0);
      images_dataset.update([
        [
          {
            id: 9,
            title: 'Villa Marrakech 9',
            uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/09.jpg'
          }, {
            id: 9,
            title: 'Villa Marrakech 10',
            uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/10.jpg'
          }
        ]
      ]);
      return images.on('complete', function() {
        return images.fetch_all(function(values) {
          return check(done, function() {
            values.sort(function(a, b) {
              return a.id > b.id;
            });
            return expect(values).to.be.eql([
              {
                id: 2,
                title: 'Villa Marrakech 2',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/02.jpg'
              }, {
                id: 3,
                title: 'Villa Marrakech 3',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/03.jpg'
              }, {
                id: 4,
                title: 'Villa Marrakech 4',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/04.jpg'
              }, {
                id: 5,
                title: 'Villa Marrakech 5',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/05.jpg'
              }, {
                id: 7,
                title: 'Villa Marrakech 7',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/07.jpg'
              }, {
                id: 9,
                title: 'Villa Marrakech 10',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/10.jpg'
              }
            ]);
          });
        });
      }, this, true);
    });
    it('after images_dataset.add( objects ), expect images.fetch_all() to be equal to result', function(done) {
      this.timeout(0);
      images_dataset.add([
        {
          title: 'Villa Marrakech 11',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/11.jpg'
        }, {
          title: 'Villa Marrakech 12',
          uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/12.jpg'
        }
      ]);
      return images.on('complete', function() {
        return images.fetch_all(function(values) {
          return check(done, function() {
            values.sort(function(a, b) {
              return a.id > b.id;
            });
            return expect(values).to.be.eql([
              {
                id: 2,
                title: 'Villa Marrakech 2',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/02.jpg'
              }, {
                id: 3,
                title: 'Villa Marrakech 3',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/03.jpg'
              }, {
                id: 4,
                title: 'Villa Marrakech 4',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/04.jpg'
              }, {
                id: 5,
                title: 'Villa Marrakech 5',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/05.jpg'
              }, {
                id: 7,
                title: 'Villa Marrakech 7',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/07.jpg'
              }, {
                id: 9,
                title: 'Villa Marrakech 10',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/10.jpg'
              }, {
                id: 10,
                title: 'Villa Marrakech 11',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/11.jpg'
              }, {
                id: 11,
                title: 'Villa Marrakech 12',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/12.jpg'
              }
            ]);
          });
        });
      }, this, true);
    });
    return it('after images_dataset.update( objects ), expect images.fetch_all() to be equal to result', function(done) {
      this.timeout(0);
      images_dataset.update([
        [
          {
            id: 9,
            title: 'Villa Marrakech 10',
            uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/10.jpg'
          }, {
            id: 9,
            title: 'Villa Marrakech 13',
            uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/13.jpg'
          }
        ]
      ]);
      return images.on('complete', function() {
        return images.fetch_all(function(values) {
          return check(done, function() {
            values.sort(function(a, b) {
              return a.id > b.id;
            });
            return expect(values).to.be.eql([
              {
                id: 2,
                title: 'Villa Marrakech 2',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/02.jpg'
              }, {
                id: 3,
                title: 'Villa Marrakech 3',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/03.jpg'
              }, {
                id: 4,
                title: 'Villa Marrakech 4',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/04.jpg'
              }, {
                id: 5,
                title: 'Villa Marrakech 5',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/05.jpg'
              }, {
                id: 7,
                title: 'Villa Marrakech 7',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/07.jpg'
              }, {
                id: 9,
                title: 'Villa Marrakech 13',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/13.jpg'
              }, {
                id: 10,
                title: 'Villa Marrakech 11',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/11.jpg'
              }, {
                id: 11,
                title: 'Villa Marrakech 12',
                uri: 'https://raw.github.com/ConnectedSets/castorcad/master/images/12.jpg'
              }
            ]);
          });
        });
      }, this, true);
    });
  });

}).call(this);

/*
//@ sourceMappingURL=xs_load_images_tests.map
*/
